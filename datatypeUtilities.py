import taichi as ti

index = ti.types.vector(n = 3, dtype = ti.int32)
idx8p = ti.types.matrix(n = 8, m = 3, dtype = ti.int32)
n3m81f64 = ti.types.matrix(n = 3, m = 81, dtype = ti.f64)
n3m24f64 = ti.types.matrix(n = 3, m = 24, dtype = ti.f64)
n8m24f64 = ti.types.matrix(n = 8, m = 24, dtype = ti.f64)
n8m8f64 = ti.types.matrix(n = 8, m = 8, dtype = ti.f64)
n3m3f64 = ti.types.matrix(n = 3, m = 3, dtype = ti.f64)
nd3f32 = ti.types.ndarray(ndim = 3)
nd4f32 = ti.types.ndarray(ndim = 4)
nd4f64 = ti.types.ndarray(ndim = 4)
nd5f64 = ti.types.ndarray(ndim = 5)
nd4 = ti.types.ndarray(ndim = 4)
vec3f64 = ti.types.vector(n = 3, dtype = ti.f64)
vec3f32 = ti.types.vector(n = 3, dtype = ti.f32)
vec24f64 = ti.types.vector(n = 24, dtype = ti.f64)
vec8f64 = ti.types.vector(n = 8, dtype = ti.f64)
vec81f64 = ti.types.vector(n = 81, dtype = ti.f64)
mgL0Data = ti.types.ndarray(dtype=ti.f64,ndim=1)
mgL1Data = ti.types.ndarray(dtype=ti.f64,ndim=1)
mgL2Data = ti.types.ndarray(dtype=ti.f64,ndim=5)
mgL3DataDim4 = ti.types.ndarray(dtype=ti.f64,ndim=4)
mgL3DataDim5 = ti.types.ndarray(dtype=ti.f64,ndim=5)
nodalWeights = ti.types.vector(n = 8, dtype = ti.f64)
nodalWeightsDim8 = ti.types.matrix(n = 8, m = 8, dtype = ti.f64)
lclst = ti.types.vector(n = 24, dtype = ti.f64)
lclmt = ti.types.struct(xx=ti.f64, xy=ti.f64, xz=ti.f64, yx=ti.f64, yy=ti.f64, yz=ti.f64, zx=ti.f64, zy=ti.f64, zz=ti.f64)